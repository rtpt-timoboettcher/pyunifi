#!/usr/bin/env python3

import argparse
import time

from pyunifi.controller import Controller

parser = argparse.ArgumentParser()
parser.add_argument('-c', '--controller', default='unifi', help='the controller address (default "unifi")')
parser.add_argument('-u', '--username', default='admin', help='the controller username (default("admin")')
parser.add_argument('-p', '--password', default='', help='the controller password')
parser.add_argument('-b', '--port', default='8443', help='the controller port (default "8443")')
parser.add_argument('-v', '--version', default='v5', help='the controller base version (default "v5")')
parser.add_argument('-s', '--siteid', default='default', help='the site ID, UniFi >=3.x only (default "default")')
parser.add_argument('-d', '--debug', default=False, help='enable debug output', action='store_true')
parser.add_argument('-V', '--no-ssl-verify', default=False, action='store_true', help='Don\'t verify ssl certificates')
parser.add_argument('-C', '--certificate', default='', help='verify with ssl certificate pem file')
parser.add_argument('-W', '--wifi', default='', help='SSID or ID of wifi')
parser.add_argument('-P', '--psk', default='', help='new PSK for wifi')
args = parser.parse_args()

ssl_verify = (not args.no_ssl_verify)

if ssl_verify and len(args.certificate) > 0:
        ssl_verify = args.certificate

if args.debug:
    import logging
    logging.basicConfig(level=logging.DEBUG)

c = Controller(args.controller, args.username, args.password, args.port, args.version, args.siteid, ssl_verify=ssl_verify)

wifis = c.get_wifi()
for wifi in wifis:
    if args.wifi == wifi["configuration"]["_id"] or args.wifi == wifi["configuration"]["name"]:
        if "x_passphrase" in wifi["configuration"]:
            wifi["configuration"]["x_passphrase"] = args.psk
            c.set_wifi(wifi["configuration"]["_id"], wifi["configuration"])
